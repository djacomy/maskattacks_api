"""empty message

Revision ID: 1f290ce16e8
Revises: None
Create Date: 2020-03-25 01:21:00.133743

"""

# revision identifiers, used by Alembic.
revision = '1f290ce16e8'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orga_variable',
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('value', sa.String(length=15), nullable=True),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('orga_reference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=15), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('libelle', sa.String(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orga_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('street', sa.String(length=50), nullable=True),
    sa.Column('zipcode', sa.String(length=10), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('lon', sa.Integer(), nullable=True),
    sa.Column('lat', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orga_manufacturor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('skill_level', sa.Integer(), nullable=True),
    sa.Column('quality_need', sa.Integer(), nullable=True),
    sa.Column('contract_type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['capacity'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['contract_type'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['quality_need'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['skill_level'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['type'], ['orga_reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orga_transporter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('capacity_type', sa.Integer(), nullable=True),
    sa.Column('capacity_value', sa.Integer(), nullable=True),
    sa.Column('range_value', sa.Integer(), nullable=True),
    sa.Column('range_type', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['capacity_type'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['capacity_value'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['range_type'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['type'], ['orga_reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orga_organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('availability', sa.Integer(), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('object_type', sa.Unicode(length=255), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['orga_address.id'], ),
    sa.ForeignKeyConstraint(['availability'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['role'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['status'], ['orga_reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orga_customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('subtype', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subtype'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['type'], ['orga_reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orga_provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('subtype', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subtype'], ['orga_reference.id'], ),
    sa.ForeignKeyConstraint(['type'], ['orga_reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auth_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=True),
    sa.Column('firstname', sa.String(length=30), nullable=True),
    sa.Column('lastname', sa.String(length=30), nullable=True),
    sa.Column('password', sa.String(length=120), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_manager', sa.Boolean(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['orga_organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('auth_user')
    op.drop_table('orga_provider')
    op.drop_table('orga_customer')
    op.drop_table('orga_organization')
    op.drop_table('orga_transporter')
    op.drop_table('orga_manufacturor')
    op.drop_table('orga_address')
    op.drop_table('orga_reference')
    op.drop_table('orga_variable')
    ### end Alembic commands ###
